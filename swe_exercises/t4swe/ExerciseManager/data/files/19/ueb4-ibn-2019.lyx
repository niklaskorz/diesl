#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass scrartcl
\begin_preamble
%\usepackage[ngerman]{babel}
\usepackage{xspace}
\usepackage{caption}
\usepackage[autolanguage]{numprint}
\usepackage{booktabs}
\usepackage{tikz}
\usepackage{ifthen}
\usepackage{paralist}
\usepackage{scrpage2}
\usepackage{hyperref}
%\usepackage{libertine} 

\newcommand{\uebnr}{4}
\newcommand{\uebabgabe}{21.05.2019, 11:00 Uhr}

\newcommand{\uebdatum}{14.05.2019}
 
\newcounter{uebnummer}
\setcounter{uebnummer}{0}

\newcommand{\aufgabe}[1]{\stepcounter{uebnummer}\section*{Aufgabe \arabic{uebnummer} \hfill(#1 \ifthenelse{\equal{#1}{1}}{Punkt}{Punkte})}}

\pagestyle{scrheadings}

\ifoot{\footnotesize{\uebnr{}. Übung IBN -- SoSe 2019}}
\cfoot{}
\ofoot{\thepage}

%\newcommand{\befehl}[1]{"`\texttt{#1}"'\xspace}
\setlength{\parindent}{0pt} 
\end_preamble
\options headinclude,footinclude,DIV14,smallheadings,ngerman
\use_default_options false
\maintain_unincluded_children false
\language ngerman
\language_package default
\inputencoding utf8
\fontencoding T1
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 11
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 1
\use_package mhchem 0
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Stichwortverzeichnis
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\is_math_indent 0
\math_numbering_side default
\quotes_style polish
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
Universität Heidelberg 
\begin_inset space \hfill{}
\end_inset

Lehrstuhl für Parallele und Verteilte Systeme (PVS)
\begin_inset Newline newline
\end_inset

 Sommersemester 2019 
\begin_inset space \hfill{}
\end_inset

Diego Costa, Artur Andrzejak
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center

\series bold
\size large
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
uebnr{}
\end_layout

\end_inset

.
 Übung zur Vorlesung 
\begin_inset Quotes gld
\end_inset

Betriebssysteme und Netzwerke
\begin_inset Quotes grd
\end_inset

 (IBN)
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\series default
\size default

\begin_inset VSpace 2ex*
\end_inset

Abgabedatum: 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
uebabgabe
\end_layout

\end_inset


\series bold
\size large

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\series default
\size default

\begin_inset CommandInset line
LatexCommand rule
offset "0ex"
width "100col%"
height "0.5pt"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Multithreaded programs - Mutex
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
aufgabe{6}
\end_layout

\end_inset

Implementieren Sie ein multi-threaded Programm, dessen Threads in einer
 Endlosschleife immer wieder um einen Mutex wettstreiten.
 In der kritischen Region jedes Threads passiert jeweils nichts, außer zu
 registrieren, dass der Mutex erfolgreich zugeteilt wurde (per Zähler).
 Einziger Parameter des Programms ist die Anzahl 
\begin_inset Formula $n$
\end_inset

 der Threads, die das Program starten soll.
\end_layout

\begin_layout Standard
Finden Sie heraus wie 
\begin_inset Quotes pld
\end_inset

fair
\begin_inset Quotes prd
\end_inset

 es dabei zugeht: Wie oft wird jedem Thread der Mutex zugeteilt? Der Hauptthread
 sollte zuerst alle Threads starten, und daraufhin eine Sekunde warten,
 um sicherzugehen, dass alle Threads laufen.
 Dann setzt er alle Zähler zurück und legt sich 3 Sekunden schlafen.
 Anschließend gibt er die Zählerstände aus und beendet das Programm.
 
\series bold
Bitte reichen Sie Ihr Programm in Moodle ein.
\end_layout

\begin_layout Description
a) Führen Sie das Programm für 
\begin_inset Formula $1,2,5,10$
\end_inset

 und 
\begin_inset Formula $100$
\end_inset

 Threads aus.
 Wie oft konnte der Mutex jeweils insgesamt erlangt werden? Ist diese Anzahl
 ungefähr gleich auf alle Threads verteilt?
\end_layout

\begin_layout Description
b) Die Fairness hängt auch davon ab, ob die wettstreitenden Threads auf
 verschiedenen CPUs oder Cores derselben CPU ausgeführt werden.
 Stellen Sie sicher, dass ihr Programm jetzt nur auf einem Core läuft (etwa
 durch den Befehl 
\emph on
pthread_setaffinity_np()
\emph default
).
 Unter Linux können Sie auch einfach ihr Programm via 
\emph on
taskset -c 3 ./myProgram 5
\emph default
 ausführen.
 Das beschränkt die Ausführung auf den Core mit dem Index 3.
 Wiederholen Sie die Tests aus 
\series bold
a)
\series default
.
 Wie wirkt sich diese Änderung auf die Fairness aus?
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Synchronization
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
aufgabe{3}
\end_layout

\end_inset

Beim web-basierten Spiel 
\emph on
The Deadlock Empire
\emph default

\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "https://deadlockempire.github.io/"
literal "false"

\end_inset


\end_layout

\end_inset

 nehmen Sie die Rolle des Schedulers ein, der die Ausführung von Threads
 steuert.
 Lösen Sie die 6 Level aus den Kapiteln 
\emph on
Unsynchronized Code
\emph default
 und 
\emph on
Locks
\emph default
.
 Geben Sie an, wie Sie beide Threads in die kritische Region manövrieren
 bzw.
 wie Sie die Assertion auslösen.
 Erklären Sie, wann die Operation 
\family typewriter
Expand
\family default
 zur Verfügung steht.
 Ist es realistisch, dass Sie als Scheduler in beliebiger Abfolge 
\family typewriter
Step
\family default
 auslösen können?
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Hardware Atomic Operations
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
aufgabe{2}
\end_layout

\end_inset

Vergegenwärtigen Sie sich die Hardwarelösung 
\begin_inset Quotes pld
\end_inset

Test and Set Lock
\begin_inset Quotes prd
\end_inset

 zum wechselseitigen Ausschluss aus der Vorlesung 7.
 Beschreiben Sie folgende Situationen Zeile für Zeile anhand des Assemblercodes
 und beschreiben Sie dabei den Inhalt des Registers 
\family typewriter
RX
\family default
 und der Variable 
\family typewriter
LOCK
\family default
.
 Beachten Sie dabei, dass der betrachtete Thread auch mit anderen Threads
 interagiert und gehen Sie darauf ein.
\end_layout

\begin_layout Standard
Zur Erinnerung: Der Befehl 
\family typewriter
CMP RX, #0
\family default
 vergleicht den Inhalt von Register 
\family typewriter
RX
\family default
 mit der Zahl 
\family typewriter
0
\family default
.
 Der Befehl 
\family typewriter
JNE
\family default
 führt einen bedingten Sprung (hier: zum Label 
\family typewriter
enter_region
\family default
) aus bei Nicht-Gleichheit (
\family typewriter
NE
\family default
, non-equality) bei der letzten 
\family typewriter
CMP
\family default
-Operation.
 Der Befehl RET verursacht, dass die aktuelle Routine (hier: 
\family typewriter
enter_region
\family default
) verlassen wird und man zur Stelle ihres Aufrufs zurückkehrt.
\end_layout

\begin_layout Description
1.
 Die gesamte Routine 
\family typewriter
enter_region
\family default
 wird genau einmal durchlaufen.
\end_layout

\begin_layout Description
2.
 Die Schleife in 
\family typewriter
enter_region
\family default
 wird beim zweiten Durchlauf verlassen.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
aufgabe{2}
\end_layout

\end_inset

Schauen Sie sich das Video "Lecture 3, Unit 2: using condition variables"
 aus Vorlesung 8 an und beantworten Sie folgende Fragen:
\end_layout

\begin_layout Description
a) Wie unterscheiden sich Semaphore im Bezug auf 
\begin_inset Quotes pld
\end_inset

Gedächtnis
\begin_inset Quotes prd
\end_inset

 von Mutexen und Bedingungsvariablen? Was passiert, wenn ein Thread ein
 
\emph on
signal
\emph default
 broadcastet, aber zu diesem Zeitpunkt kein Thread darauf wartet?
\end_layout

\begin_layout Description
b) Warum muss der Mutex zu 
\emph on
done
\emph default
 aufrechterhalten werden, wenn man das signal broadcastet?
\end_layout

\begin_layout Description
\begin_inset Note Note
status open

\begin_layout Plain Layout
Semaphores
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
aufgabe{3}
\end_layout

\end_inset

In der Vorlesung wurde gezeigt, wie Semaphore benutzt werden können, um
 den wechselseitigen Ausschluss zu gewährleisten.
 Hier ist der zugehörige Pseudocode:
\end_layout

\begin_layout LyX-Code
wait(S);
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
// critical section
\end_layout

\end_deeper
\begin_layout LyX-Code
signal(S);
\end_layout

\begin_layout Standard
Beschreiben Sie, was passieren würde, wenn der Programmierer einen der folgenden
 Fehler begeht:
\end_layout

\begin_layout Description
a) die Reihenfolge von 
\family typewriter
signal()
\family default
 und 
\family typewriter
wait()
\family default
 wird vertauscht;
\end_layout

\begin_layout Description
b) der Aufruf 
\family typewriter
signal()
\family default
 wird durch den (erneuten) Aufruf 
\family typewriter
wait()
\family default
 ersetzt;
\end_layout

\begin_layout Description
c) der Aufruf von 
\family typewriter
wait()
\family default
 und/oder von 
\family typewriter
signal()
\family default
 wird ausgelassen.
\begin_inset Note Note
status open

\begin_layout Plain Layout
#11/12-3-1 #13-3-1
\end_layout

\end_inset


\end_layout

\begin_layout Description
\begin_inset Note Note
status open

\begin_layout Plain Layout
Exercises not included
\end_layout

\end_inset


\end_layout

\end_body
\end_document

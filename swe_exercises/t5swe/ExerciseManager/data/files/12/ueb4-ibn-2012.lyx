#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass scrartcl
\begin_preamble
\usepackage[ngerman]{babel}
\usepackage{xspace}
\usepackage{caption}
\usepackage[autolanguage]{numprint}
\usepackage{booktabs}
\usepackage{tikz}
\usepackage{ifthen}
\usepackage{paralist}
\usepackage{scrpage2}
%\usepackage{libertine} 
\usepackage{listings}

\newcommand{\uebnr}{4}
\newcommand{\uebabgabe}{23.05.2012, 11:00 Uhr}

%\newcommand{\uebdatum}{25.04.2012}
 
\newcounter{uebnummer}
\setcounter{uebnummer}{0}

\newcommand{\aufgabe}[1]{\stepcounter{uebnummer}\section*{Aufgabe \arabic{uebnummer} \hfill(#1 \ifthenelse{\equal{#1}{1}}{Punkt}{Punkte})}}

\pagestyle{scrheadings}

\ifoot{\footnotesize{\uebnr{}. Übung IBN -- SoSe 2012}}
\cfoot{}
\ofoot{\thepage}

%\newcommand{\befehl}[1]{"`\texttt{#1}"'\xspace}
\setlength{\parindent}{0pt} 

\newcommand{\befehl}[1]{"`\texttt{#1}"'\xspace}
\end_preamble
\options headinclude,footinclude,DIV14,smallheadings
\use_default_options false
\maintain_unincluded_children false
\language ngerman
\language_package default
\inputencoding utf8
\fontencoding T1
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 11
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 1
\use_package mhchem 0
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Stichwortverzeichnis
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\is_math_indent 0
\math_numbering_side default
\quotes_style german
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
Universität Heidelberg 
\begin_inset space \hfill{}
\end_inset

Lehrstuhl für Parallele und Verteilte Systeme (PVS)
\begin_inset Newline newline
\end_inset

 Sommersemester 2012 
\begin_inset space \hfill{}
\end_inset

Artur Andrzejak
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center

\series bold
\size large
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
uebnr{}
\end_layout

\end_inset

.
 Übung zur Vorlesung 
\begin_inset Quotes gld
\end_inset

Betriebssysteme und Netzwerke
\begin_inset Quotes grd
\end_inset

 (IBN)
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\series default
\size default

\begin_inset VSpace 2ex*
\end_inset

Abgabedatum: 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
uebabgabe
\end_layout

\end_inset


\series bold
\size large

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\series default
\size default

\begin_inset CommandInset line
LatexCommand rule
offset "0ex"
width "100col%"
height "0.5pt"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
aufgabe{2}
\end_layout

\end_inset

In einem System mit zusammenhängendem Speicher sind folgende Lücken in Folge
 von Swapping entstanden (geordnet nach aufsteigenden Adressen, und in MB):
 10, 4, 20, 18, 7, 9, 12 und 15.
 Welche Lücken wählen 
\emph on
First Fit
\emph default
, 
\emph on
Best Fit
\emph default
 und 
\emph on
Worst Fit
\emph default
 jeweils aus, wenn nacheinander Speichersegmente von 12 MB, 11 MB und 9
 MB angefordert werden? 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
aufgabe{1}
\end_layout

\end_inset

In einem Paging-System wurde als die Seitengröße 512 Bytes gewählt.
 Geben Sie die Seitennummern und die Offsets für jede der folgenden logischen
 Adressen an: 2753, 3000, 36619, 54361.
 Wie würden Sie die Seitennummer und Offset in C berechnen (zwei Zeilen
 Code reichen hier als Antwort)?
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
aufgabe{1}
\end_layout

\end_inset

Ein Computer mit 32-Bit-Adressen benutzt eine zweistufige Seitentabelle.
 Logische Adressen werden in ein 10-Bit-Feld für die oberste Seitentabelle,
 12 Bit für die zweite Seitentabelle und einen Offset unterteilt.
 Wie viele Seiten sind im Adressraum und wie groß sind sie?
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
aufgabe{1}
\end_layout

\end_inset

Ein Computer mit 32-Bit-Adressen hat eine Seitengröße von 2 KB und 256 MB
 physischen Speicher.
 Wie viele Einträge hat eine konventionelle Seitentabelle, und wie viele
 eine invertierte Seitentabelle?
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
aufgabe{5}
\end_layout

\end_inset

Um die Funktionsweise eines Programms zu verstehen, auch wenn der Quellcode
 nicht verfügbar ist, kann der GDB (GNU Project Debugger) verwendet werden.
 Dazu lädt man das Programm mittels 
\emph on
gdb ./myprog
\emph default
 in den Debugger und kann dieses dann disassemblieren.
 Das ist in der Abbildung
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Ein-disassembliertes-Programm"

\end_inset

 gezeigt.
 Finden Sie die Funktion des Programms in der Abbildung heraus, und geben
 Sie dabei die Bedeutung jeder Assembler-Zeile an.
 Hinweis: die Bedeutung des Befehls 
\emph on
leave
\emph default
 finden Sie hier: 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://en.wikipedia.org/wiki/X86_instruction_listings
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Float figure
placement th
wide false
sideways false
status open

\begin_layout LyX-Code

\size scriptsize
(gdb) set disassembly - flavor intel 
\end_layout

\begin_layout LyX-Code

\size scriptsize
(gdb) disassemble main 
\end_layout

\begin_layout LyX-Code

\size scriptsize
Dump of assembler code for function main:
\size default

\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
0x080483bb <+0 >:  push ebp 
\end_layout

\begin_layout LyX-Code

\size scriptsize
0x080483bc <+1 >:  mov ebp,esp 
\end_layout

\begin_layout LyX-Code

\size scriptsize
0x080483be <+3 >:  and esp,0xfffffff0 
\end_layout

\begin_layout LyX-Code

\size scriptsize
0x080483c1 <+6 >:  sub esp,0x20
\end_layout

\begin_layout LyX-Code

\size scriptsize
0x080483c4 <+9 >:  mov DWORD PTR [esp],0xa 
\end_layout

\begin_layout LyX-Code

\size scriptsize
0x080483cb <+16 >: call 0x8048394 <func> 
\end_layout

\begin_layout LyX-Code

\size scriptsize
0x080483d0 <+21 >: mov DWORD PTR [esp+0x1c],eax 
\end_layout

\begin_layout LyX-Code

\size scriptsize
0x080483d4 <+25 >: mov eax,0x0 
\end_layout

\begin_layout LyX-Code

\size scriptsize
0 x080483d9 <+30>: leave 
\end_layout

\begin_layout LyX-Code

\size scriptsize
0 x080483da <+31>: ret
\end_layout

\end_deeper
\begin_layout LyX-Code

\size scriptsize
End of assembler dump.
\end_layout

\begin_layout LyX-Code

\size scriptsize
(gdb) disassemble func 
\end_layout

\begin_layout LyX-Code

\size scriptsize
Dump of assembler code for function func:
\size default

\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
0x08048394 <+0 >:  push ebp 
\end_layout

\begin_layout LyX-Code

\size scriptsize
0x08048395 <+1 >:  mov ebp,esp 
\end_layout

\begin_layout LyX-Code

\size scriptsize
0x08048397 <+3 >:  sub esp,0 x18 
\end_layout

\begin_layout LyX-Code

\size scriptsize
0x0804839a <+6 >:  cmp DWORD PTR [ebp+0x8],0x1 
\end_layout

\begin_layout LyX-Code

\size scriptsize
0x0804839e <+10 >: jg 0x80483a7 <func+19 > 
\end_layout

\begin_layout LyX-Code

\size scriptsize
0x080483a0 <+12 >: mov eax,0x1 
\end_layout

\begin_layout LyX-Code

\size scriptsize
0x080483a5 <+17 >: jmp 0x80483b9 <func+37 > 
\end_layout

\begin_layout LyX-Code

\size scriptsize
0x080483a7 <+19 >: mov eax, DWORD PTR [ebp+0 x8] 
\end_layout

\begin_layout LyX-Code

\size scriptsize
0x080483aa <+22 >: sub eax,0x1 
\end_layout

\begin_layout LyX-Code

\size scriptsize
0x080483ad <+25 >: mov DWORD PTR [esp],eax 
\end_layout

\begin_layout LyX-Code

\size scriptsize
0x080483b0 <+28 >: call 0x8048394 <func > 
\end_layout

\begin_layout LyX-Code

\size scriptsize
0x080483b5 <+33 >: imul eax, DWORD PTR [ebp+0x8] 
\end_layout

\begin_layout LyX-Code

\size scriptsize
0x080483b9 <+37 >: leave 
\end_layout

\begin_layout LyX-Code

\size scriptsize
0x080483ba <+38 >: ret 
\end_layout

\end_deeper
\begin_layout LyX-Code

\size scriptsize
End of assembler dump.
\end_layout

\begin_layout Plain Layout

\size scriptsize
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Ein-disassembliertes-Programm"

\end_inset

Ein disassembliertes Programm
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Das Programm berechnet die Fakultät von n.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
aufgabe{2}
\end_layout

\end_inset

Die Folien 13 und 14 der Vorlesung 7 deuten an, wie ein Monitor samt Zustandsvar
iablen mit Hilfe von Semaphoren implementiert wird.
 Gilt auch das Gegenteil, d.h.
 kann ein Semaphor durch einen Monitor (ggf.
 mit Zustandsvariablen) implementiert werden? Falls ja, geben Sie den Pseudocode
 an.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
aufgabe{1}
\end_layout

\end_inset

Was ist der wesentliche Unterschied zwischen der 
\emph on
signal
\emph default
(S) Operation eines Semaphors S und der x.
\emph on
signal
\emph default
() Operation auf der Zustandsvariablen x eines Monitors?
\end_layout

\end_body
\end_document
